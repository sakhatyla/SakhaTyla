import "./Constructor.stg"

main(model) ::= <<
using System;
using System.Collections.Generic;

namespace $model.Solution.Namespace$.Core.Requests.$model.Entity.PluralName$.Models
{
    public class $model.Entity.Name$ShortModel
    {
        public $model.Entity.Name$ShortModel($model.Entity.DefaultField:constructorParam()$)
        {
            $model.Entity.DefaultField:constructorInit()$
        }

        public $model.Entity.IdField.TypeName$ $model.Entity.IdField.Name$ { get; set; }

        $model.Entity.DefaultField:field()$
    }
}

>>

field(field) ::= <<
$field:(field.Template)()$
>>

Type(field) ::= <<
public $field.TypeName$$if(!field.IsRequired && !field.NetType.IsValueType)$?$endif$ $field.Name$ { get; set; }

public override string ToString()
{
    return \$"{$field.Name$}";
}
>>

Entity(field) ::= <<
public $field.EntityIdTypeName$ $field.Name$Id { get; set; }

public override string ToString()
{
    return \$"{$field.Name$Id}";
}
>>

Enum(field) ::= <<
public $field.TypeName$ $field.Name$ { get; set; }

public override string ToString()
{
    return \$"{$field.Name$}";
}
>>


main(model) ::= <<
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using MediatR;
using $model.Solution.Namespace$.Core.Infrastructure;

namespace $model.Solution.Namespace$.Core.Requests.$model.Entity.PluralName$
{
    public class Create$model.Entity.Name$ : IRequest<CreatedEntity<$model.Entity.IdField.TypeName$>\>
    {
        $model.Entity.AllFields:field(); separator="\n\n"$
    }
}

>>

field(field) ::= <<
$field:(field.Template)()$
>>

Type(field) ::= <<
public $field.TypeNameNullable$$if(!field.NetType.IsValueType)$?$endif$ $field.Name$ { get; set; }
>>

Entity(field) ::= <<
public $field.EntityIdTypeNameNullable$ $field.Name$$field.Entity.IdField.Name$ { get; set; }
>>

Enum(field) ::= <<
public Enums.$field.Enum.Name$? $field.Name$ { get; set; }
>>
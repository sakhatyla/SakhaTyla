main(model) ::= <<
<ng-container *transloco="let t">

  <mat-card-header>
    <mat-card-title>{{ t('$model.Entity.PluralDisplayName$') }}</mat-card-title>
  </mat-card-header>

  <mat-card-actions>    
    <div class="action-item">
      <form (ngSubmit)="onSearch()">
        <mat-form-field>
          <mat-label>{{ t('shared.text') }}</mat-label>
          <input matInput id="text" type="text" name="text" [placeholder]="t('shared.text')" 
            [(ngModel)]="state.filter.text" />
        </mat-form-field>
        <button mat-raised-button type="submit" color="primary">{{ t('shared.search') }}</button>
        <button mat-raised-button type="reset" (click)="onReset()">{{ t('shared.reset') }}</button>
      </form>
    </div>
    <div class="action-item">
      <button mat-raised-button color="primary" type="button" (click)="onCreate()">{{ t('shared.create') }}</button>
      <button mat-raised-button type="button" (click)="onExport()">{{ t('shared.export') }}</button>
      <button mat-raised-button type="button" *ngIf="selectedIds.size > 0" (click)="onDeleteSelected()">{{ t('shared.delete') }}</button>
    </div>
  </mat-card-actions>

  <mat-card-content class="mat-elevation-z8">
    
    <table *ngIf="content" mat-table [dataSource]="content.pageItems" [matSortActive]="state | sortActive" [matSortDirection]="state | sortDirection" multiTemplateDataRows matSort (matSortChange)="onSortChange(\$event)">

      <ng-container matColumnDef="select">
        <th mat-header-cell *matHeaderCellDef>
          <mat-checkbox [appSelectAllItems]="content.pageItems" [(selectedIds)]="selectedIds"></mat-checkbox>
        </th>
        <td mat-cell *matCellDef="let item">
          <mat-checkbox [appSelectItem]="item" [(selectedIds)]="selectedIds"></mat-checkbox>
        </td>
      </ng-container>
      $model.Entity.AllFields:fieldContainer(); separator="\n"$

      <ng-container matColumnDef="action">
        <th mat-header-cell *matHeaderCellDef></th>
        <td mat-cell *matCellDef="let item">
          <button mat-icon-button (click)="\$event.stopPropagation()" [matMenuTriggerFor]="actionMenu">
            <mat-icon>more_vert</mat-icon>
          </button>
          <mat-menu #actionMenu="matMenu">
            <a mat-menu-item (click)="onEdit(item.id)">{{ t('shared.edit') }}</a>
            <a mat-menu-item (click)="onDelete(item.id)">{{ t('shared.delete') }}</a>
          </mat-menu>
        </td>
      </ng-container>

      <tr mat-header-row *matHeaderRowDef="columns"></tr>
      <tr mat-row *matRowDef="let item; columns: columns;" [routerLink]="[baseRoute, item.id]"></tr>

    </table>

    <div>
      <mat-paginator [pageSize]="state.pageSize" [pageIndex]="state.pageIndex" [pageSizeOptions]="pageSizeOptions"
        [length]="content?.totalItems" (page)="onPage(\$event)" showFirstLastButtons></mat-paginator>
    </div>

  </mat-card-content>

</ng-container>
>>

fieldContainer(field) ::= <<
<ng-container matColumnDef="$field.NameLower$">
  <th mat-header-cell *matHeaderCellDef mat-sort-header>{{ t('$field.DisplayName$') }}</th>
  <td mat-cell *matCellDef="let item">
    $field:(field.Template)(); separator="\n"$
  </td>
</ng-container>
>>

field(field) ::= <<
$field:(field.Template)()$
>>

Type(field) ::= <<
$field:(field.TypeTemplate)()$
>>

Entity(field) ::= <<
<app-$field.Entity.NameKebab$-show [value]="item.$field.NameLower$"></app-$field.Entity.NameKebab$-show>
>>

Enum(field) ::= <<
<app-$field.Enum.NameKebab$-view [value]="item.$field.NameLower$"></app-$field.Enum.NameKebab$-view>
>>

String(field) ::= <<
<app-text-view [value]="item.$field.NameLower$"></app-text-view>
>>

Int32(field) ::= <<
<app-number-view [value]="item.$field.NameLower$"></app-number-view>
>>

Int64(field) ::= <<
<app-number-view [value]="item.$field.NameLower$"></app-number-view>
>>

Decimal(field) ::= <<
<app-number-view [value]="item.$field.NameLower$"></app-number-view>
>>

Double(field) ::= <<
<app-number-view [value]="item.$field.NameLower$"></app-number-view>
>>

Boolean(field) ::= <<
<app-bool-view [value]="item.$field.NameLower$"></app-bool-view>
>>

DateTime(field) ::= <<
<app-datetime-view [value]="item.$field.NameLower$"></app-datetime-view>
>>

Date(field) ::= <<
<app-date-view [value]="item.$field.NameLower$"></app-date-view>
>>

Time(field) ::= <<
<app-time-view [value]="item.$field.NameLower$"></app-time-view>
>>

Guid(field) ::= <<
<app-text-view [value]="item.$field.NameLower$"></app-text-view>
>>

Blob(field) ::= <<
>>